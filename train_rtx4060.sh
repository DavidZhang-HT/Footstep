#!/bin/bash
# RTX 4060‰ºòÂåñËÆ≠ÁªÉËÑöÊú¨

echo "üöÄ Starting Humanoid Robot Training for RTX 4060"
echo "================================================"

# ÊøÄÊ¥ªÁéØÂ¢É
if command -v conda &> /dev/null; then
    source ~/miniconda3/etc/profile.d/conda.sh
    conda activate footstep
    echo "‚úÖ Environment activated: footstep"
else
    echo "‚ö†Ô∏è  Conda not found, using current environment"
fi

# ÊñπÊ°à1: È´òÊÄßËÉΩCPUËÆ≠ÁªÉÔºàÊé®ËçêÔºâ
echo ""
echo "üî• Option 1: High-Performance CPU Training (RECOMMENDED)"
echo "-------------------------------------------------------"
echo "Command: python gym/scripts/train.py --task=humanoid_controller --num_envs=512 --max_iterations=3000 --headless --experiment_name=cpu_production --seed=42 --sim_device=cpu --rl_device=cpu"
echo ""

# ÊñπÊ°à2: GPUËÆ≠ÁªÉÔºàÈúÄË¶ÅËß£ÂÜ≥CUDAÊû∂ÊûÑÈóÆÈ¢òÔºâ
echo "‚ö° Option 2: GPU Training (May have CUDA architecture issues)"
echo "------------------------------------------------------------"
echo "First set environment variables:"
echo "export TORCH_CUDA_ARCH_LIST=\"7.5;8.0;8.6;8.9\""
echo "export CUDA_LAUNCH_BLOCKING=1"
echo "export PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512"
echo ""
echo "Then run:"
echo "python gym/scripts/train.py --task=humanoid_controller --num_envs=512 --max_iterations=3000 --headless --experiment_name=gpu_training --seed=42"
echo ""

# ËØ¢ÈóÆÁî®Êà∑ÈÄâÊã©
echo "Choose your training mode:"
echo "1) CPU Training (Stable, works perfectly)"
echo "2) GPU Training (May have issues, but faster if works)"
echo "3) Test both modes"
echo ""
read -p "Enter your choice (1/2/3): " choice

case $choice in
    1)
        echo "üîÑ Starting CPU Training..."
        python gym/scripts/train.py \
            --task=humanoid_controller \
            --num_envs=512 \
            --max_iterations=3000 \
            --headless \
            --experiment_name=cpu_production_$(date +%Y%m%d_%H%M%S) \
            --seed=42 \
            --sim_device=cpu \
            --rl_device=cpu
        ;;
    2)
        echo "üîÑ Setting up GPU environment and starting GPU training..."
        export TORCH_CUDA_ARCH_LIST="7.5;8.0;8.6;8.9"
        export CUDA_LAUNCH_BLOCKING=1
        export PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
        
        python gym/scripts/train.py \
            --task=humanoid_controller \
            --num_envs=512 \
            --max_iterations=3000 \
            --headless \
            --experiment_name=gpu_training_$(date +%Y%m%d_%H%M%S) \
            --seed=42
        ;;
    3)
        echo "üß™ Testing CPU mode first..."
        python gym/scripts/train.py \
            --task=humanoid_controller \
            --num_envs=64 \
            --max_iterations=2 \
            --headless \
            --experiment_name=cpu_test \
            --seed=42 \
            --sim_device=cpu \
            --rl_device=cpu
        
        if [ $? -eq 0 ]; then
            echo "‚úÖ CPU test passed!"
            echo ""
            echo "üß™ Testing GPU mode..."
            export TORCH_CUDA_ARCH_LIST="7.5;8.0;8.6;8.9"
            export CUDA_LAUNCH_BLOCKING=1
            export PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
            
            timeout 60s python gym/scripts/train.py \
                --task=humanoid_controller \
                --num_envs=64 \
                --max_iterations=1 \
                --headless \
                --experiment_name=gpu_test \
                --seed=42
            
            if [ $? -eq 0 ]; then
                echo "‚úÖ GPU test passed! You can use both CPU and GPU modes."
            else
                echo "‚ùå GPU test failed. Use CPU mode for training."
            fi
        else
            echo "‚ùå CPU test failed. Please check your environment."
        fi
        ;;
    *)
        echo "Invalid choice. Exiting."
        exit 1
        ;;
esac

echo ""
echo "üéâ Training completed! Check gym/logs/ for results."
echo "To play the trained model, run:"
echo "python gym/scripts/play.py --task=humanoid_controller"